name: Validate GitHub Secrets

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1" # Every Monday at 8 AM UTC

jobs:
  validate-secrets:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Validate required secrets exist
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        run: |
          echo "Checking required secrets..."

          # Check POSTGRES_PASSWORD
          if [ -z "$POSTGRES_PASSWORD" ]; then
            echo "ERROR: POSTGRES_PASSWORD secret is missing"
            exit 1
          else
            echo "SUCCESS: POSTGRES_PASSWORD secret exists"
          fi

          # Check optional secrets
          if [ -n "$POSTGRES_USER" ]; then
            echo "SUCCESS: POSTGRES_USER secret exists"
          else
            echo "INFO: POSTGRES_USER not set, will use default 'postgres'"
          fi

          if [ -n "$POSTGRES_DB" ]; then
            echo "SUCCESS: POSTGRES_DB secret exists"
          else
            echo "INFO: POSTGRES_DB not set, will use default 'rusttracker'"
          fi

          echo "SUCCESS: All required secrets validation passed"

      - name: Test environment creation
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          echo "Testing .env file creation with secrets..."
          cat > .env.test << EOF
          # Database configuration
          DATABASE_URL=postgresql://postgres:$POSTGRES_PASSWORD@db:5432/rusttracker
          POSTGRES_DB=rusttracker
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          POSTGRES_HOST=localhost
          POSTGRES_PORT=5432

          # Backend configuration
          RUST_LOG=info
          PORT=8080

          # Frontend configuration
          FRONTEND_PORT=3000
          EOF

          echo "SUCCESS: Environment file created successfully"
          echo "File size: $(wc -c < .env.test) bytes"

          # Clean up
          rm .env.test
